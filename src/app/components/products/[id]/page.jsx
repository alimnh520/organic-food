// app/components/products/[id]/page.jsx
import ProductDetails from "./ProductDetails";

export async function generateMetadata({ params }) {
    const { id } = params; // await ‡¶≤‡¶æ‡¶ó‡ßá ‡¶®‡¶æ, params synchronous

    try {
        // üî• API ‡¶•‡ßá‡¶ï‡ßá ‡¶°‡¶æ‡¶ü‡¶æ ‡¶Ü‡¶®‡¶õ‡¶ø
        const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL}/api/products/${id}`, {
            cache: "no-store", // fresh data
        });

        if (!res.ok) {
            throw new Error(`Failed to fetch product: ${res.status}`);
        }

        const data = await res.json();
        const product = data?.product;

        if (!product) {
            return {
                title: "‡¶™‡¶£‡ßç‡¶Ø ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø",
                description: "‡¶è‡¶á ‡¶™‡¶£‡ßç‡¶Ø‡¶ü‡¶ø ‡¶è‡¶ñ‡¶® ‡¶Ü‡¶∞ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡¶ö‡ßç‡¶õ‡ßá ‡¶®‡¶æ‡•§",
            };
        }

        // Discounted price safe
        const discountedPrice =
            product.discount && product.discount > 0
                ? Math.round(product.price - (product.price * product.discount) / 100)
                : product.price;

        return {
            title: product.product_name || "‡¶™‡¶£‡ßç‡¶Ø",
            description: product.details || "‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§",
            openGraph: {
                title: product.product_name || "‡¶™‡¶£‡ßç‡¶Ø",
                description: product.details || "‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§",
                url: `https://abdullahshopbd.com/components/products/${id}`,
                images: product.product_image
                    ? [
                        {
                            url: product.product_image,
                            width: 1200,
                            height: 630,
                            alt: product.product_name || "Product Image",
                        },
                    ]
                    : [],
                type: "product",
            },
            other: {
                "product:price:amount": discountedPrice,
                "product:price:currency": "BDT",
            },
        };
    } catch (err) {
        console.error("Product Metadata Error:", err);
        return {
            title: "Error",
            description: "‡¶°‡¶æ‡¶ü‡¶æ ‡¶Ü‡¶®‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá",
        };
    }
}

// Server Component: ProductDetails render ‡¶ï‡¶∞‡¶¨‡ßá
export default async function ProductPage({ params }) {
    const { id } = params;
    return <ProductDetails id={id} />;
}
